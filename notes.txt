rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
  match /feedback/{feedbackId} {
      allow read, write: if true; // <- allow for all users (public)
    }
    
    match /applications/{applicationId} {
      allow read, write: if true; // <- allow for all users (public)
    }
    
    match /users/{userId} {
     allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Conversations can be accessed only if the user is a participant
    match /conversations/{conversationId} {
      allow read, update, delete: if request.auth != null && 
        resource.data.participants.hasAny([request.auth.uid]);

      allow create: if request.auth != null && 
        request.resource.data.participants.hasAll([request.auth.uid]);

      // Messages within a conversation
      match /messages/{messageId} {
        allow create: if request.auth != null 
        //add this for security but may break
        && request.resource.data.senderId == request.auth.uid;

        allow read: if request.auth != null &&
          get(/databases/$(database)/documents/conversations/$(conversationId))
          .data.participants.hasAny([request.auth.uid]);
      }
    }
  }
}


dd a points subcollection under each mentor's user document:
/users/{mentorId}/points/{menteeId}: { points: number, history: [{ date, amount }] }





